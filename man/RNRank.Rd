% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RNRank.R
\name{RNRank}
\alias{RNRank}
\title{Rank by gene importance}
\usage{
RNRank(
  network,
  damping = 1,
  max_iterations = 100,
  threshold = 0,
  self = F,
  letZeros = F,
  divider = 100,
  sorted = T,
  preorder = F,
  verbose = F,
  throwOnError = T
)
}
\arguments{
\item{network}{Two-column gene matrix. Every row contains one regulating and one regulated gene.}

\item{damping}{Damping factor (0-1) defining percentage of non-randomness.}

\item{max_iterations}{Maximum number of iterations, if not converging earlier (minimum 10).}

\item{threshold}{Euclidean distance between iterations less than or equal to the threshold
will terminate calculations}

\item{self}{Self regulations permitted (T) or not (F).}

\item{letZeros}{FALSE to allow random regulations from regulating genes
to those not normally regulated.}

\item{divider}{Divides the percentage used for dangling genes,
to use it for random regulations from regulating genes (minimum 10).}

\item{sorted}{Results sorted by descending percentage (T) or unsorted (F).}

\item{preorder}{Sort input matrix, so that regulating genes with more targets are first.}

\item{verbose}{Shows some information during process.}

\item{throwOnError}{If FALSE, in case of stopping error, returns NULL. Otherwise \code{\link[base:stop]{base::stop()}} is called.}
}
\value{
Named 1-column matrix of percentages (0-1).
}
\description{
Infers importance of Regulatory Network nodes (genes),
by using a Google's PageRank-like algorithm.
}
